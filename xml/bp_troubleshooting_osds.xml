<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="bp-troubleshooting-osds">
 <title>Troubleshooting OSDs</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  Content location: https://docs.ceph.com/docs/master/rados/troubleshooting/troubleshooting-osd/
 </para>
 <sect1 xml:id="bp-troubleshooting-osd-data">
  <title>Obtaining Data About OSDs</title>
  <sect2 xml:id ="troubleshooting-ceph-logs">
  <title>Ceph Logs</title>
  </sect2>
  <sect2 xml:id ="troubleshooting-admin-socket">
  <title>Admin Socket</title>
  </sect2>
  <sect2 xml:id ="troubleshooting-display-freespace">
  <title>Display Freespace</title>
  </sect2>
  <sect2 xml:id ="troubleshooting-admin-statistics">
  <title>I/O Statistics</title>
  </sect2>
  <sect2 xml:id ="troubleshooting-admin-diagnostic">
  <title>Diagnostic Messages</title>
  </sect2>
 </sect1>
 <sect1 xml:id="bp-troubleshooting-rebalancing">
  <title>Stopping Without Rebalancing</title>
 </sect1>
 <sect1 xml:id="bp-troubleshooting-not-running">
  <title>OSDs Not Running</title>
  <sect2 xml:id="troubleshooting-osd-start">
  <title>An OSD Will Not Start</title>
  </sect2>
  <sect2 xml:id="troubleshooting-osd-fail">
  <title>An OSD Failed</title>
  </sect2>
  <sect2 xml:id="troubleshooting-osd-space">
  <title>No Free Drive Space</title>
  </sect2>
 </sect1>
 <sect1 xml:id="bp-troubleshooting-osd-slow">
 <title>OSDs Are Slow Or Unresponsive</title>
  <sect2 xml:id="troubleshooting-network-issues">
  <title>Networking Issues</title>
  </sect2>
  <sect2 xml:id="troubleshooting-drive-config">
  <title>Drive Configuration</title>
  </sect2>
  <sect2 xml:id="troubleshooting-bad-sector">
  <title>Bad Sectors and Fragmented Disks</title>
  </sect2>
  <sect2 xml:id="troubleshooting-monitor-osd">
  <title>Co-Resident Monitors and OSDs</title>
  </sect2>
  <sect2 xml:id="troubleshooting-coresident-process">
  <title>Co-Resident Processes</title>
  </sect2>
  <sect2 xml:id="troubleshooting-log-levels">
  <title>Logging Levels</title>
  </sect2>
  <sect2 xml:id="troubleshooting-recovery">
  <title>Recovery Throttling</title>
  </sect2>
  <sect2 xml:id="troubleshooting-kernel-version">
  <title>Kernel Version</title>
  </sect2>
  <sect2 xml:id="troubleshooting-kernal-issues">
  <title>Kernel Issues with Syncfs</title>
  </sect2>
  <sect2 xml:id="troubleshooting-filesystem-issues">
  <title>Filesystem Issues</title>
  </sect2>
  <sect2 xml:id="troubleshooting-ram">
  <title>Insufficient RAM</title>
  </sect2>
  <sect2 xml:id="troubleshooting-requests">
  <title>Old or Slow Requests</title>
  </sect2>
  <sect2 xml:id="troubleshooting-slow-requests">
  <title>Debugging Slow Requests</title>
  </sect2>
 </sect1>
 <sect1 xml:id="storage-bp-recover-osdweight">
  <title>OSD Weight is 0</title>

  <para>
   When OSD starts, it is assigned a weight. The higher the weight, the bigger
   the chance that the cluster writes data to the OSD. The weight is either
   specified in a cluster &crushmap;, or calculated by the OSDs' start-up
   script.
  </para>

  <para>
   In some cases, the calculated value for OSDs' weight may be rounded down to
   zero. It means that the OSD is not scheduled to store data, and no data is
   written to it. The reason is usually that the disk is too small (smaller
   than 15GB) and should be replaced with a bigger one.
  </para>
 </sect1>
 <sect1 xml:id="storage-bp-recover-osddown">
  <title>OSD is Down</title>

  <para>
   OSD daemon is either running, or stopped/down. There are 3 general reasons
   why an OSD is down:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Hard disk failure.
    </para>
   </listitem>
   <listitem>
    <para>
     The OSD crashed.
    </para>
   </listitem>
   <listitem>
    <para>
     The server crashed.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   You can see the detailed status of OSDs by running
  </para>

<screen>&prompt.cephuser;ceph osd tree
# id  weight  type name up/down reweight
 -1    0.02998  root default
 -2    0.009995   host doc-ceph1
 0     0.009995      osd.0 up  1
 -3    0.009995   host doc-ceph2
 1     0.009995      osd.1 up  1
 -4    0.009995   host doc-ceph3
 2     0.009995      osd.2 down  1</screen>

  <para>
   The example listing shows that the <literal>osd.2</literal> is down. Then
   you may check if the disk where the OSD is located is mounted:
  </para>

<screen>&prompt.root;lsblk -f
 [...]
 vdb
 ├─vdb1               /var/lib/ceph/osd/ceph-2
 └─vdb2</screen>

  <para>
   You can track the reason why the OSD is down by inspecting its log file
   <filename>/var/log/ceph/ceph-osd.2.log</filename>. After you find and fix
   the reason why the OSD is not running, start it with
  </para>

<screen>&prompt.root;systemctl start ceph-osd@2.service</screen>

  <para>
   Do not forget to replace <literal>2</literal> with the actual number of your
   stopped OSD.
  </para>
 </sect1>
 <sect1 xml:id="storage-bp-performance-slowosd">
  <title>Finding Slow OSDs</title>

  <para>
   When tuning the cluster performance, it is very important to identify slow
   storage/OSDs within the cluster. The reason is that if the data is written
   to the slow(est) disk, the complete write operation slows down as it always
   waits until it is finished on all the related disks.
  </para>

  <para>
   It is not trivial to locate the storage bottleneck. You need to examine each
   and every OSD to find out the ones slowing down the write process. To do a
   benchmark on a single OSD, run:
  </para>

<screen role="ceph_tell_osd_bench"><command>ceph tell</command> osd.<replaceable>OSD_ID_NUMBER</replaceable> bench</screen>

  <para>
   For example:
  </para>

<screen>&prompt.cephuser;ceph tell osd.0 bench
 { "bytes_written": 1073741824,
   "blocksize": 4194304,
   "bytes_per_sec": "19377779.000000"}</screen>

  <para>
   Then you need to run this command on each OSD and compare the
   <literal>bytes_per_sec</literal> value to get the slow(est) OSDs.
  </para>
 </sect1>
 <sect1 xml:id="bp-troubleshooting-flapping-osds">
 <title>Flapping OSDs</title>
 </sect1>
 </chapter>
